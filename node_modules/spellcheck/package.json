{
  "name": "spellcheck",
  "version": "0.0.3",
  "author": {
    "name": "Brian White",
    "email": "mscdex@mscdex.net"
  },
  "description": "An async hunspell binding for node.js",
  "main": "./index",
  "engines": {
    "node": ">=0.6.0"
  },
  "keywords": [
    "spell",
    "spellcheck",
    "hunspell",
    "spelling"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/mscdex/spellcheck/raw/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/mscdex/spellcheck.git"
  },
  "scripts": {
    "install": "node-gyp rebuild"
  },
  "gypfile": true,
  "readme": "Description\n===========\n\nAn async hunspell binding for [node.js](http://nodejs.org/).\n\n\nRequirements\n============\n\n* [node.js](http://nodejs.org/) -- v0.6.0 or newer\n* [Dictionary and affix files](http://wiki.services.openoffice.org/wiki/Dictionaries)\n\n\nInstall\n============\n\nnpm install spellcheck\n\n\nExamples\n========\n\n* Check a word:\n```javascript\n  // this example uses the en_US hunspell files from SCOWL:\n  //   http://wordlist.sourceforge.net/\n  var SpellCheck = require('spellcheck'),\n        base = __dirname + (process.platform === 'win32' ? '\\\\' : '/'),\n        spell = new SpellCheck(base + 'en_US.aff', base + 'en_US.dic');\n\n  spell.check('sain', function(err, correct, suggestions) {\n      if (err) throw err;\n      if (correct)\n        console.log('Word is spelled correctly!');\n      else\n        console.log('Word not recognized. Suggestions: ' + suggestions);\n  });\n\n  // output:\n  // Word not recognized. Suggestions: chain,sin,saint,satin,stain,slain,swain,rain,sail,lain,said,gain,main,spin,pain\n```\n\n\nAPI\n===\n\nMethods\n-------\n\n* **(constructor)**(<_String_>affixPath, <_Integer_>dictPath) - Creates and returns a new SpellCheck instance. affixPath is an **absolute** path that points to an affix (.aff) file. dictPath is an **absolute** path that points to a dictionary (.dic) file.\n\n* **check**(<_String_>word, <_Function_>callback) - _(void)_ - Spell checks the given word. The callback receives three arguments: an <_Error_> object in case of error (null otherwise), a <_Boolean_> indicating if the word was spelled correctly, and if the word was not recognized, an <_Array_> of suggested words.\n",
  "_id": "spellcheck@0.0.3",
  "dist": {
    "shasum": "59945cc9f1597e60b93473ad25c738e6f989f95c"
  },
  "_from": "spellcheck@0.0.3"
}
